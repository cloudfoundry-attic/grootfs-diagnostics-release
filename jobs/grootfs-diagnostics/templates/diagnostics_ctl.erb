#!/bin/bash

BIN_PATH=/var/vcap/jobs/grootfs-diagnostics/bin
DATA_PATH=/var/vcap/data/grootfs-diagnostics
TRACE_DAT=${DATA_PATH}/trace.dat
RUN_PATH=/var/vcap/sys/run/grootfs-diagnostics
LOG_PATH=/var/vcap/sys/log/grootfs-diagnostics
PID_FILE=${RUN_PATH}/grootfs-diagnostics.pid
export PATH=/var/vcap/packages/showmewhatyougot/bin:$PATH

mkdir -p $DATA_PATH
mkdir -p $RUN_PATH
mkdir -p $LOG_PATH

case $1 in

  start)
    showmewhatyougot -state=D \
          -polling-interval=<%= p('grootfs-diagnostics.polling_interval') %> \
          -reporter-backoff-duration=<%= p('grootfs-diagnostics.reporter_backoff_duration') %> \
          -alert-interval-threshold=<%= p('grootfs-diagnostics.alert_interval_threshold') %> \
          <% if p('grootfs-diagnostics.tracing_enabled') %> -tracing-enabled <% end %>\
          -process-state-counter="${BIN_PATH}/dstate-counter" \
          -xfs-trace-path="${BIN_PATH}/xfs-trace" \
          -process-state-reporter="${BIN_PATH}/report-dstate" \
          -pid-file-path=$PID_FILE \
          -commands-timeout=<%= p('grootfs-diagnostics.commands_timeout') %> \
      > $LOG_PATH/diagnostics_ctl.stdout.log 2> $LOG_PATH/diagnostics_ctl.stderr.log

    ;;

  stop)
    if [[ -f "$PID_FILE" ]]
    then
      kill $(cat $PID_FILE)
      rm $PID_FILE
    fi

    ;;

  *)
    echo "Usage: $0 {start|stop}"

    ;;

esac

