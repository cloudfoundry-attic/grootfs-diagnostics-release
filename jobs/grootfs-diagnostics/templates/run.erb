#!/bin/bash

set -e

BIN_PATH=/var/vcap/jobs/grootfs-diagnostics/bin
DATA_PATH=/var/vcap/data/grootfs-diagnostics
TRACE_DAT=${DATA_PATH}/trace.dat
RUN_PATH=/var/vcap/sys/run/grootfs-diagnostics
LAST_RUN_PIDS=${RUN_PATH}/last_pids
PID_FILE=${RUN_PATH}/grootfs-diagnostics.pid
CELL_ID=$(cat /var/vcap/instance/id)
CELL_NAME="$(cat /var/vcap/instance/name)"
VCAP_DATA_PATH=/var/vcap/data/grootfs-diagnostics

export PATH=/var/vcap/packages/trace-cmd/bin:$PATH

mkdir -p $DATA_PATH
mkdir -p $RUN_PATH

echo $$ > $PID_FILE

<% if p('grootfs-diagnostics.tracing_enabled') %>
source ${BIN_PATH}/xfs-trace
<% else %>
source ${BIN_PATH}/no-action
<% end %>

source ${BIN_PATH}/report-dstate
source ${BIN_PATH}/collect-data
source ${BIN_PATH}/dstate-counter

dstate_reported=false

main() {
  start_trace

  touch ${LAST_RUN_PIDS}
  while true
  do
    report_dstate_processes
    dstate_counter

    sleep <%= p("grootfs-diagnostics.interval") %>
  done
}

report_dstate_processes() {
  current_pids=$(ps axho pid,state | grep 'D' | cut -d D -f1)
  for pid in $current_pids
  do
    if grep $pid $LAST_RUN_PIDS > /dev/null
    then

      local timestamp=$(date "+%d-%m-%y_%H-%M-%S")
      local output_name="${CELL_NAME}-${CELL_ID}-debug-info-${timestamp}"
      local output_path="${VCAP_DATA_PATH}/${output_name}"

      extract_trace_data
      ${dstate_reported} && return

      collect_debug_info "$output_path"
      report_dstate "$output_path"
      dstate_reported=true
      break

    fi
  done
  echo $current_pids > $LAST_RUN_PIDS
}

main
